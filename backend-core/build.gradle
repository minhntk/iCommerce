buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: "2.5.5"
		classpath group: 'io.spring.gradle', name: 'dependency-management-plugin', version: "1.0.11.RELEASE"
	}
}

plugins {
	id 'java'
	id 'java-library'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

ext {
	set('springCloudVersion', "2020.0.4")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

group = 'com.icom'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
}


dependencies {
	api 'org.springframework.boot:spring-boot-starter'
	api 'org.springframework.boot:spring-boot-starter-web'
	//api 'org.springframework.boot:spring-boot-starter-security'
	api 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Spring Cloud
	//implementation 'org.springframework.cloud:spring-cloud-starter-kubernetes'
	//implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	//testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	api "io.jsonwebtoken:jjwt-api:0.11.2"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.2"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.2"
}

jar {
	enabled true
}

bootJar {
	enabled false
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
	archiveClassifier = 'sources'
}

test {
	useJUnitPlatform()
}
