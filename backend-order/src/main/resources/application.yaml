server.port: 8081
spring:
  profiles:
    active: "${SPRING_PROFILES_ACTIVE:local}"
  application:
    name: icom-order-service
  datasource:
    url: jdbc:mysql://localhost:3306/i_order
    username: root
    password: root
  jpa:
    database: MYSQL
    openInView: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        # https://docs.jboss.org/hibernate/stable/core.old/reference/en/html/configuration-optional.html
        jdbc:
          batch_size: 25
          batch_versioned_data: true
          time_zone: UTC
        order_inserts: true
        order_updates: true
        show_sql: true
        format_sql: true
    open-in-view: false
  flyway:
    baseline-on-migrate: true
  cloud:
    stream:
      bindings:
        order-created-out-0:
          destination: order-created
          binder: kafka
          content-type: application/*+avro
  kafka:
    binder:
      configuration:
        value:
          deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
          serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    schema:
      avro:
        dynamic-schema-generation-enabled: true

kafka:
  bootstrapAddress: localhost:29092

message:
  topic:
    name: order-transaction

icom:
  services:
    product: ${PRODUCT_SERVICE_NAME}

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: ${SERVICE_REGISTER_URI:http://localhost:8761/eureka/}
#  fetch-registry: true

feign:
  okhttp:
    enabled: true
  client:
    config:
      product-service:
        url: "${PRODUCT_SERVICE_URL:http://localhost:8101}"
  httpclient:
    disableSslValidation: true

resilience4j:
  retry:
    instances:
      get-product-retry:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 3
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - feign.RetryableException

  ratelimiter:
    instances:
      product-rate-limit:
        limitForPeriod: 2
        limitRefreshPeriod: 4s
        timeoutDuration: 5s
